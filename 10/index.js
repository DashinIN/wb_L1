// 10.	Реализовать функцию конвертации строки в JSON со всеми необходимыми проверками и валидациями.

const convertStringToJson = str => {
  // Удаляем пробелы в начале и конце строки
  str = str.trim();
  // Проверяем, является ли строка пустой
  if (str === '') {
    throw new Error('Empty string');
  }
  // Проверяем, является ли строка объектом
  if (str[0] !== '{' || str[str.length - 1] !== '}') {
    throw new Error('Invalid JSON');
  }
  // Удаляем фигурные скобки в начале и конце строки
  str = str.slice(1, -1);
  // Разделяем строку на ключи и значения путем разбиения по запятым
  let keyValuePairs = str.split(',');
  // Создаем пустой объект JSON
  let json = {};
  // Обходим все пары ключ-значение
  for (let i = 0; i < keyValuePairs.length; i++) {
    let pair = keyValuePairs[i].split(':'); // Разделяем пару на ключ и значение

    let key = pair[0].trim(); // Удаляем пробелы в начале и конце ключа
    let value = pair[1].trim(); // Удаляем пробелы в начале и конце значения

    // Проверяем, является ли ключ пустой строкой
    if (key === '') {
      throw new Error('Empty key');
    }

    // Проверяем, является ли значение числом
    if (!isNaN(value)) {
      json[key] = parseFloat(value);
    }
    // Проверяем, является ли значение строкой
    else if (value[0] === '"' && value[value.length - 1] === '"') {
      json[key] = value.slice(1, -1); // Удаляем кавычки в начале и конце строки
    }
    // Проверяем, является ли значение объектом
    else if (value[0] === '{' && value[value.length - 1] === '}') {
      json[key] = convertStringToJson(value); // Рекурсивно конвертируем строку вложенного объекта
    }
    // Если значение не является числом, строкой или объектом, считаем его недопустимым
    else {
      throw new Error('Invalid value');
    }
  }

  return json;
}

// Пример использования:
let jsonString = '{"name": "John", "age": 30, "city": "New York"}';
let jsonObject = convertStringToJson(jsonString);
console.log(jsonObject);


// В этом решении мы сначала выполняем несколько проверок, чтобы убедиться,
//  что переданная строка является корректным объектом JSON. Затем мы разделяем
//   строку на пары ключ-значение и рекурсивно обрабатываем каждую пару. Ключи 
//   и значения очищаются от пробелов в начале и конце, а затем присваиваются
//    соответствующим свойствам объекта JSON. Если значение является числом или 
//    строкой, оно обрабатывается соответствующим образом, а если значение является
//     объектом, оно рекурсивно конвертируется в JSON.